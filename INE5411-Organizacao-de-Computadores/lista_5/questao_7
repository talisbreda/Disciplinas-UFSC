.data

	input1: .asciiz "\n0 desliga, 1 liga, 2 fecha\n"
	input2: .asciiz "\nBit desejado:\n"

.text
main:
	li	$s0, 0x10010040		# Carrega o endereco
	li	$s1, 8			# Divisor para manipulacao de bits
	
loop:
	# Imprime string na tela
	li	$v0, 4
	la	$a0, input1
	syscall
	
	# Le 0, 1 ou 2 (desliga, liga ou fecha)
	li	$v0, 5
	syscall
	move	$t0, $v0
	
	# Fecha o programa caso o input seja 2
	beq	$t0, 2, endloop
	
	# Imprime string na tela
	li	$v0, 4
	la	$a0, input2
	syscall
	
	# Le o numero do bit
	li	$v0, 5
	syscall
	move	$t1, $v0
	
	
	div	$t1, $s1	# Divisão do numero do bit por 8
	mflo	$t3		# Pega o quociente
	mfhi	$t4		# Pega o resto
	add	$t3, $s0, $t3	# Soma o endereço base com o quociente
	lb	$t2, ($t3)	# Carrega o byte da memoria
	
	li	$t5, 1		# Reseta o registrador $t5
	sllv	$t5, $t5, $t4	# Shifta $t5 para o valor adequado
	
	beq	$t0, 0, desliga

liga:

	or	$t2, $t2, $t5	# Liga o bit
	sb	$t2, ($t3)	# Armazena na memoria
	
	j 	loop		# Volta pro loop
	

desliga:

	# Operacao NAND
	not	$t5, $t5	# Inverte $t5 para operação AND
	and	$t2, $t2, $t5	# Desliga o bit
	sb	$t2, ($t3)	# Armazena na memoria
	
	j 	loop		# Volta pro loop

endloop:

	li	$v0, 10
	syscall

