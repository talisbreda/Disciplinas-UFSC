LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY twobitmult IS
GENERIC (N : integer := 8);
PORT (A, B: in std_logic_vector(1 downto 0);
		S: out std_logic_vector(3 downto 0));
END twobitmult;

-- Sinais de comando
-- ini = RstP = mA = CB  => ini=1 somente em S1
-- CA=1 em S1 e em S4
-- dec = op = m1 = m2  => dec=1 somente em S4 (estado no qual ocorre A <= A - 1 )
-- CP=1 somente em S3 (estado no qual ocorre P <= P + B )


ARCHITECTURE estrutura OF twobitmult IS
	
	COMPONENT halfadder is
	port (A, B: in std_logic;
		 S, Cout: out std_logic
	  );
	end component;
	
	signal and1, and2, and3, and4, has1, has2, has3, has4: std_logic;
BEGIN

	and1 <= A(1) and B(1);
	and2 <= A(1) and B(0);
	and3 <= A(0) and B(1);
	and4 <= A(0) and B(0);
	
	ha1: halfadder port map (and2, and3, has2, has1);
	ha2: halfadder port map (and1, has2, has3, has4);
	
	S(3) <= has3;
	S(2) <= has2;
	S(1) <= has1;
	S(0) <= and4;

END estrutura;